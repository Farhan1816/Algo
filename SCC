#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
using namespace std;
using namespace __gnu_pbds;

#define int long long 
#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ll long long

const int INF=1e18+7;
const int N=2e5+10;
const int M=998244353LL;
const int M2=1e9+13;
const double pi=3.1415926535897932384626433832795028841971; 

vector<bool>visited(N);
stack<int>st;
vector<vector<int>>adj(N), revAdj(N);

int comps[N];

void dfs2(int ind, int comp)
{
	visited[ind] = true;
	comps[ind] = comp;
	for(auto i: revAdj[ind])if(!visited[i])dfs2(i, comp);
}

void dfs(int ind)
{
	visited[ind] = true;
	for(auto i: adj[ind])if(!visited[i])dfs(i);
	st.push(ind);
}

void solve()
{
	int n, m;
	cin >> n >> m;
	for(int i=0;i<m;i++)
	{
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		revAdj[y].push_back(x);
	}	
	for(int i=1;i<=n;i++)if(!visited[i])dfs(i);
	visited.assign(n+5, false);
	int c = 1;
	while(!st.empty())
	{
		int val = st.top();
		st.pop();
		if(!visited[val])dfs2(val, c++);
	}
	for(int i=1;i<=n;i++)cout << i << " " << comps[i] << "\n";
}

signed main()
{
	//srand(time(0));
	fastio;
//precalc();
	int t = 1;
	//cin >> t;
	for(int i=1;i<=t;i++)
	{
		//cout << "Case " << i << ": " ;
		solve();
	}
	return 0;
}
